generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid())
  name             String?
  username         String         @unique
  email            String         @unique
  password         String
  admin            Boolean        @default(false)
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime       @default(now())
  userProperties   UserProperty[]
  uploadedDocuments Document[]
}

model Property {
  id             String         @id @default(uuid())
  name           String
  address        String
  city           String
  state          String
  zip            String
  code           String         @unique
  images         String[]
  primaryImage   String?
  createdAt      DateTime       @default(now())
  userProperties UserProperty[]
  documents      Document[]
}

model UserProperty {
  id         String   @id @default(uuid())
  userId     String
  propertyId String
  createdAt  DateTime @default(now())
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, propertyId])
}

model Document {
  id           String   @id @default(uuid())
  name         String
  originalName String
  type         String
  size         Int
  url          String
  blobKey      String?
  propertyId   String
  property     Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  documentType String   // "financial" or "star_report"
  year         Int
  month        Int
  uploadDate   DateTime @default(now())
  uploadedBy   String
  uploadedByUser User   @relation(fields: [uploadedBy], references: [id])

  @@index([propertyId, year, month, documentType])
}
